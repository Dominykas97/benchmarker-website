{"ast":null,"code":"var _jsxFileName = \"/home/dominykas/year4/Individual-Project/website/client/src/App.js\";\n// import React, { Component } from \"react\";\n// import {\n//   Route,\n//   NavLink,\n//   HashRouter\n// } from \"react-router-dom\";\n// import Tests from \"./Tests\";\n// import RunNew from \"./RunNew\";\n// import Completed from \"./Completed\";\n// import Login from \"./Login\";\n// import LoginPage from \"./LoginPage\";\n// \n// class App extends Component {\n//   render() {\n//     return (\n//       <HashRouter>\n//         <div>\n//           {/*<h1>Simple SPA</h1>*/}\n//           <ul className=\"header\">\n//             <li id=\"loadingDocks\">LoadingDocks</li>\n//             <li><NavLink exact to=\"/\">Tests</NavLink></li>\n//             <li><NavLink to=\"/new\">Run new tests</NavLink></li>\n//             <li><NavLink to=\"/completed\">Completed</NavLink></li>\n//             {/*<li><NavLink to=\"/login\">Login</NavLink></li>*/}\n//           </ul>\n//           <div className=\"content\">\n//             <Route exact path=\"/\" component={Tests}/>\n//             <Route path=\"/new\" component={RunNew}/>\n//             <Route path=\"/completed\" component={Completed}/>\n//             {/*<Route path=\"/login\" component={LoginPage}/>*/}\n//           </div>\n//         </div>\n//       </HashRouter>\n//     );\n//   }\n// }\n//  \n// export default App;\nimport React, { Component } from 'react';\nimport { Route, NavLink, HashRouter } from \"react-router-dom\"; // import logo from './logo.svg';\n// import './App.css';\n\nimport Tests from \"./Tests\";\nimport RunNew from \"./RunNew\";\nimport Completed from \"./Completed\"; // import Login from \"./Login\";\n// import LoginPage from \"./LoginPage\";\n// const fs = require('fs');\n// const express = require('express');\n// var host = process.env.COMPONENT_BACKEND_HOST || '0.0.0.0';\n// var port = process.env.COMPONENT_BACKEND_PORT || 8080;\n// \n// console.warn(host, port);\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null\n    };\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/express_backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    console.warn(\"a\");\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  render() {\n    return React.createElement(HashRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      id: \"loadingDocks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"LoadingDocks\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      exact: true,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Tests\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Run new tests\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/completed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Completed\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.data))), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Tests,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/new\",\n      component: RunNew,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/completed\",\n      component: Completed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;\n{\n  /*<div className=\"App\">*/\n}\n{\n  /*<header className=\"App-header\">*/\n}\n{\n  /*  <h1 className=\"App-title\">Welcome to React</h1>*/\n}\n{\n  /*</header>*/\n}\n{\n  /*//Render the newly fetched data inside of this.state.data*/\n}\n{\n  /*<p className=\"App-intro\">{this.state.data}</p>*/\n}\n{\n  /*</div>*/\n}","map":{"version":3,"sources":["/home/dominykas/year4/Individual-Project/website/client/src/App.js"],"names":["React","Component","Route","NavLink","HashRouter","Tests","RunNew","Completed","App","state","data","callBackendAPI","response","fetch","body","json","status","Error","message","componentDidMount","console","warn","then","res","setState","express","catch","err","log","render"],"mappings":"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","sourcesContent":["// import React, { Component } from \"react\";\n// import {\n//   Route,\n//   NavLink,\n//   HashRouter\n// } from \"react-router-dom\";\n// import Tests from \"./Tests\";\n// import RunNew from \"./RunNew\";\n// import Completed from \"./Completed\";\n// import Login from \"./Login\";\n// import LoginPage from \"./LoginPage\";\n// \n// class App extends Component {\n//   render() {\n//     return (\n//       <HashRouter>\n//         <div>\n//           {/*<h1>Simple SPA</h1>*/}\n//           <ul className=\"header\">\n//             <li id=\"loadingDocks\">LoadingDocks</li>\n//             <li><NavLink exact to=\"/\">Tests</NavLink></li>\n//             <li><NavLink to=\"/new\">Run new tests</NavLink></li>\n//             <li><NavLink to=\"/completed\">Completed</NavLink></li>\n//             {/*<li><NavLink to=\"/login\">Login</NavLink></li>*/}\n//           </ul>\n//           <div className=\"content\">\n//             <Route exact path=\"/\" component={Tests}/>\n//             <Route path=\"/new\" component={RunNew}/>\n//             <Route path=\"/completed\" component={Completed}/>\n//             {/*<Route path=\"/login\" component={LoginPage}/>*/}\n//           </div>\n//         </div>\n//       </HashRouter>\n//     );\n//   }\n// }\n//  \n// export default App;\n\n\nimport React, { Component } from 'react';\nimport {\n  Route,\n  NavLink,\n  HashRouter\n} from \"react-router-dom\";\n\n\n// import logo from './logo.svg';\n// import './App.css';\n\n\nimport Tests from \"./Tests\";\nimport RunNew from \"./RunNew\";\nimport Completed from \"./Completed\";\n\n\n// import Login from \"./Login\";\n// import LoginPage from \"./LoginPage\";\n// const fs = require('fs');\n// const express = require('express');\n\n// var host = process.env.COMPONENT_BACKEND_HOST || '0.0.0.0';\n// var port = process.env.COMPONENT_BACKEND_PORT || 8080;\n// \n// console.warn(host, port);\n\nclass App extends Component {\nstate = {\n    data: null\n  };\n\n  componentDidMount() {\n      // Call our fetch function below once the component mounts\n    console.warn(\"a\");\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n\n    return body;\n  };\n\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          {/*<h1>Simple SPA</h1>*/}\n          <ul className=\"header\">\n            <li id=\"loadingDocks\">LoadingDocks</li>\n            <li><NavLink exact to=\"/\">Tests</NavLink></li>\n            <li><NavLink to=\"/new\">Run new tests</NavLink></li>\n            <li><NavLink to=\"/completed\">Completed</NavLink></li>\n            <li><NavLink to=\"/\">{this.state.data}</NavLink></li>\n            {/*<li><NavLink to=\"/login\">Login</NavLink></li>*/}\n          </ul>\n          <div className=\"content\">\n            <Route exact path=\"/\" component={Tests}/>\n            <Route path=\"/new\" component={RunNew}/>\n            <Route path=\"/completed\" component={Completed}/>\n            {/*<Route path=\"/login\" component={LoginPage}/>*/}\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n{/*<div className=\"App\">*/}\n{/*<header className=\"App-header\">*/}\n{/*  <h1 className=\"App-title\">Welcome to React</h1>*/}\n{/*</header>*/}\n{/*//Render the newly fetched data inside of this.state.data*/}\n{/*<p className=\"App-intro\">{this.state.data}</p>*/}\n{/*</div>*/}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/dominykas/year4/Individual-Project/website/client/src/App.js\";\n// import React, { Component } from \"react\";\n// import {\n//   Route,\n//   NavLink,\n//   HashRouter\n// } from \"react-router-dom\";\n// import Tests from \"./Tests\";\n// import RunNew from \"./RunNew\";\n// import Completed from \"./Completed\";\n// import Login from \"./Login\";\n// import LoginPage from \"./LoginPage\";\n// \n// class App extends Component {\n//   render() {\n//     return (\n//       <HashRouter>\n//         <div>\n//           {/*<h1>Simple SPA</h1>*/}\n//           <ul className=\"header\">\n//             <li id=\"loadingDocks\">LoadingDocks</li>\n//             <li><NavLink exact to=\"/\">Tests</NavLink></li>\n//             <li><NavLink to=\"/new\">Run new tests</NavLink></li>\n//             <li><NavLink to=\"/completed\">Completed</NavLink></li>\n//             {/*<li><NavLink to=\"/login\">Login</NavLink></li>*/}\n//           </ul>\n//           <div className=\"content\">\n//             <Route exact path=\"/\" component={Tests}/>\n//             <Route path=\"/new\" component={RunNew}/>\n//             <Route path=\"/completed\" component={Completed}/>\n//             {/*<Route path=\"/login\" component={LoginPage}/>*/}\n//           </div>\n//         </div>\n//       </HashRouter>\n//     );\n//   }\n// }\n//  \n// export default App;\nimport React, { Component } from 'react';\nimport { Route, NavLink, HashRouter } from \"react-router-dom\"; // import logo from './logo.svg';\n// import './App.css';\n\nimport Tests from \"./Tests\";\nimport RunNew from \"./RunNew\";\nimport Completed from \"./Completed\";\nimport Login from \"./Login\";\nimport LoginPage from \"./LoginPage\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null\n    };\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/express_backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  render() {\n    return (\n      /*\n      <div className=\"App\">\n      <header className=\"App-header\">\n      <h1 className=\"App-title\">Welcome to React</h1>\n      </header>\n      Render the newly fetched data inside of this.state.data \n      <p className=\"App-intro\">{this.state.data}</p>\n      </div>*/\n      React.createElement(HashRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        id: \"loadingDocks\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"LoadingDocks\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        exact: true,\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Tests\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Run new tests\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/completed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Completed\"))), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: Tests,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/new\",\n        component: RunNew,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/completed\",\n        component: Completed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dominykas/year4/Individual-Project/website/client/src/App.js"],"names":["React","Component","Route","NavLink","HashRouter","Tests","RunNew","Completed","Login","LoginPage","App","state","data","callBackendAPI","response","fetch","body","json","status","Error","message","componentDidMount","then","res","setState","express","catch","err","console","log","render"],"mappings":"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","sourcesContent":["// import React, { Component } from \"react\";\n// import {\n//   Route,\n//   NavLink,\n//   HashRouter\n// } from \"react-router-dom\";\n// import Tests from \"./Tests\";\n// import RunNew from \"./RunNew\";\n// import Completed from \"./Completed\";\n// import Login from \"./Login\";\n// import LoginPage from \"./LoginPage\";\n// \n// class App extends Component {\n//   render() {\n//     return (\n//       <HashRouter>\n//         <div>\n//           {/*<h1>Simple SPA</h1>*/}\n//           <ul className=\"header\">\n//             <li id=\"loadingDocks\">LoadingDocks</li>\n//             <li><NavLink exact to=\"/\">Tests</NavLink></li>\n//             <li><NavLink to=\"/new\">Run new tests</NavLink></li>\n//             <li><NavLink to=\"/completed\">Completed</NavLink></li>\n//             {/*<li><NavLink to=\"/login\">Login</NavLink></li>*/}\n//           </ul>\n//           <div className=\"content\">\n//             <Route exact path=\"/\" component={Tests}/>\n//             <Route path=\"/new\" component={RunNew}/>\n//             <Route path=\"/completed\" component={Completed}/>\n//             {/*<Route path=\"/login\" component={LoginPage}/>*/}\n//           </div>\n//         </div>\n//       </HashRouter>\n//     );\n//   }\n// }\n//  \n// export default App;\n\n\n\nimport React, { Component } from 'react';\nimport {\n  Route,\n  NavLink,\n  HashRouter\n} from \"react-router-dom\";\n// import logo from './logo.svg';\n// import './App.css';\nimport Tests from \"./Tests\";\nimport RunNew from \"./RunNew\";\nimport Completed from \"./Completed\";\nimport Login from \"./Login\";\nimport LoginPage from \"./LoginPage\";\n\nclass App extends Component {\nstate = {\n    data: null\n  };\n\n  componentDidMount() {\n      // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n  render() {\n    return (/*\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Welcome to React</h1>\n        </header>\n        Render the newly fetched data inside of this.state.data \n        <p className=\"App-intro\">{this.state.data}</p>\n      </div>*/\n      \n      <HashRouter>\n        <div>\n          {/*<h1>Simple SPA</h1>*/}\n          <ul className=\"header\">\n            <li id=\"loadingDocks\">LoadingDocks</li>\n            <li><NavLink exact to=\"/\">Tests</NavLink></li>\n            <li><NavLink to=\"/new\">Run new tests</NavLink></li>\n            <li><NavLink to=\"/completed\">Completed</NavLink></li>\n            {/*<li><NavLink to=\"/login\">Login</NavLink></li>*/}\n          </ul>\n          <div className=\"content\">\n            <Route exact path=\"/\" component={Tests}/>\n            <Route path=\"/new\" component={RunNew}/>\n            <Route path=\"/completed\" component={Completed}/>\n            {/*<Route path=\"/login\" component={LoginPage}/>*/}\n          </div>\n        </div>\n      </HashRouter>\n    );\n    \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
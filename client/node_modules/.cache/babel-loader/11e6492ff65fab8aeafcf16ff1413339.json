{"ast":null,"code":"var _jsxFileName = \"/home/dominykas/year4/Individual-Project/website/client/src/RunNew.js\";\nimport React, { Component } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik'; // class RunNew extends Component {\n//   render() {\n//     return (\n//       <div>\n//         <h2>Configure a new test</h2>\n//           <form method='POST' action='/new_job'>\n//               <button>Run</button>\n//           </form>\n//\n//           <form method='POST' action='/remove_job'>\n//               <button>Remove</button>\n//           </form>\n//\n//           <form>\n//               <label>\n//                   Name:\n//                   <input type=\"text\" name=\"name\" />\n//                   Page load time:\n//                   <input type=\"text\" name=\"name\" />\n//                   Number of requests per load:\n//                   <input type=\"text\" name=\"name\" />\n//               </label>\n//               <input type=\"submit\" value=\"Submit\" />\n//           </form>\n//           {/*<button*/}\n//         {/*    className=\"btn btn-default\"*/}\n//         {/*    // style={buttonStyle}*/}\n//         {/*    // onClick={createNewJob()}*/}\n//         {/*>{\"Run new\"}*/}\n//         {/*</button>*/}\n//       </div>\n//     );\n//   }\n// }\n// export default RunNew;\n//\n//\n// import React from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n\nconst RunNew = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, \"Configuring a new test\"), React.createElement(Formik, {\n  initialValues: {\n    pageLoadTime: '3',\n    numberOfRequestsPerLoad: '200'\n  },\n  validate: values => {\n    const errors = {}; // if (!values.pageLoadTime) {\n    //     errors.pageLoadTime = 'Required';\n    // } else if (\n    //     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.pageLoadTime)\n    // ) {\n    //     errors.pageLoadTime = 'Invalid pageLoadTime address';\n    // }\n\n    return errors;\n  },\n  onSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2)); // createNewJob();\n\n      setSubmitting(false);\n    }, 400);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, ({\n  isSubmitting\n}) => React.createElement(Form, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  id: \"frm\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  htmlFor: \"pageLoadTime\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, \"Page load time: \"), React.createElement(Field, {\n  type: \"pageLoadTime\",\n  name: \"pageLoadTime\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  name: \"pageLoadTime\",\n  component: \"div\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  id: \"frm\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  htmlFor: \"numberOfRequestsPerLoad\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n}, \"Number of request per load: \"), React.createElement(Field, {\n  type: \"numberOfRequestsPerLoad\",\n  name: \"numberOfRequestsPerLoad\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  name: \"numberOfRequestsPerLoad\",\n  component: \"div\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  id: \"frm\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  htmlFor: \"memoryUsage\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n}, \"Memory usage: \"), React.createElement(Field, {\n  type: \"memoryUsage\",\n  name: \"memoryUsage\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  name: \"memoryUsage\",\n  component: \"div\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  id: \"frm\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  htmlFor: \"pageSize\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n}, \"Page size: \"), React.createElement(Field, {\n  type: \"pageSize\",\n  name: \"pageSize\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  name: \"pageSize\",\n  component: \"div\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  id: \"frm\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  htmlFor: \"numberOfRequests\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}, \"Number of requests: \"), React.createElement(Field, {\n  type: \"numberOfRequests\",\n  name: \"numberOfRequests\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  name: \"numberOfRequests\",\n  component: \"div\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  id: \"frm\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  htmlFor: \"responseSize\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}, \"Response size: \"), React.createElement(Field, {\n  type: \"responseSize\",\n  name: \"responseSize\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  name: \"responseSize\",\n  component: \"div\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  id: \"frm\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  htmlFor: \"latency\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103\n  },\n  __self: this\n}, \"Latency: \"), React.createElement(Field, {\n  type: \"latency\",\n  name: \"latency\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  name: \"latency\",\n  component: \"div\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  id: \"frm\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  htmlFor: \"bandwitch\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108\n  },\n  __self: this\n}, \"Bandwitch: \"), React.createElement(Field, {\n  type: \"bandwitch\",\n  name: \"bandwitch\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  name: \"bandwitch\",\n  component: \"div\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  id: \"frm\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  htmlFor: \"intervalBetweenRequests\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113\n  },\n  __self: this\n}, \"Interval between requests: \"), React.createElement(Field, {\n  type: \"intervalBetweenRequests\",\n  name: \"intervalBetweenRequests\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  name: \"intervalBetweenRequests\",\n  component: \"div\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n})), React.createElement(\"button\", {\n  type: \"submit\",\n  disabled: isSubmitting,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n}, \"Submit\"))));\n\nexport default RunNew;","map":{"version":3,"sources":["/home/dominykas/year4/Individual-Project/website/client/src/RunNew.js"],"names":["React","Component","Formik","Form","Field","ErrorMessage","RunNew","pageLoadTime","numberOfRequestsPerLoad","values","errors","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\n// class RunNew extends Component {\n//   render() {\n//     return (\n//       <div>\n//         <h2>Configure a new test</h2>\n//           <form method='POST' action='/new_job'>\n//               <button>Run</button>\n//           </form>\n//\n//           <form method='POST' action='/remove_job'>\n//               <button>Remove</button>\n//           </form>\n//\n//           <form>\n//               <label>\n//                   Name:\n//                   <input type=\"text\" name=\"name\" />\n//                   Page load time:\n//                   <input type=\"text\" name=\"name\" />\n//                   Number of requests per load:\n//                   <input type=\"text\" name=\"name\" />\n//               </label>\n//               <input type=\"submit\" value=\"Submit\" />\n//           </form>\n//           {/*<button*/}\n//         {/*    className=\"btn btn-default\"*/}\n//         {/*    // style={buttonStyle}*/}\n//         {/*    // onClick={createNewJob()}*/}\n//         {/*>{\"Run new\"}*/}\n//         {/*</button>*/}\n//       </div>\n//     );\n//   }\n// }\n \n// export default RunNew;\n//\n//\n// import React from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n\nconst RunNew = () => (\n    <div>\n        <h2>Configuring a new test</h2>\n        <Formik\n            initialValues={{ pageLoadTime: '3', numberOfRequestsPerLoad: '200' }}\n            validate={values => {\n                const errors = {};\n                // if (!values.pageLoadTime) {\n                //     errors.pageLoadTime = 'Required';\n                // } else if (\n                //     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.pageLoadTime)\n                // ) {\n                //     errors.pageLoadTime = 'Invalid pageLoadTime address';\n                // }\n                return errors;\n            }}\n            onSubmit={(values, { setSubmitting }) => {\n                setTimeout(() => {\n                    alert(JSON.stringify(values, null, 2));\n                    // createNewJob();\n                    setSubmitting(false);\n                }, 400);\n            }}\n        >\n\n            {({ isSubmitting }) => (\n                <Form>\n                    <div id={\"frm\"}>\n                        <label htmlFor=\"pageLoadTime\">Page load time: </label>\n                        <Field type=\"pageLoadTime\" name=\"pageLoadTime\" />\n                        <ErrorMessage name=\"pageLoadTime\" component=\"div\" />\n                    </div>\n                    <div id={\"frm\"}>\n                        <label htmlFor=\"numberOfRequestsPerLoad\">Number of request per load: </label>\n                        <Field type=\"numberOfRequestsPerLoad\" name=\"numberOfRequestsPerLoad\" />\n                        <ErrorMessage name=\"numberOfRequestsPerLoad\" component=\"div\" />\n                    </div>\n                    <div id={\"frm\"}>\n                        <label htmlFor=\"memoryUsage\">Memory usage: </label>\n                        <Field type=\"memoryUsage\" name=\"memoryUsage\" />\n                        <ErrorMessage name=\"memoryUsage\" component=\"div\" />\n                    </div>\n                    <div id={\"frm\"}>\n                        <label htmlFor=\"pageSize\">Page size: </label>\n                        <Field type=\"pageSize\" name=\"pageSize\" />\n                        <ErrorMessage name=\"pageSize\" component=\"div\" />\n                    </div>\n                    <div id={\"frm\"}>\n                        <label htmlFor=\"numberOfRequests\">Number of requests: </label>\n                        <Field type=\"numberOfRequests\" name=\"numberOfRequests\" />\n                        <ErrorMessage name=\"numberOfRequests\" component=\"div\" />\n                    </div>\n                    <div id={\"frm\"}>\n                        <label htmlFor=\"responseSize\">Response size: </label>\n                        <Field type=\"responseSize\" name=\"responseSize\" />\n                        <ErrorMessage name=\"responseSize\" component=\"div\" />\n                    </div>\n                    <div id={\"frm\"}>\n                        <label htmlFor=\"latency\">Latency: </label>\n                        <Field type=\"latency\" name=\"latency\" />\n                        <ErrorMessage name=\"latency\" component=\"div\" />\n                    </div>\n                    <div id={\"frm\"}>\n                        <label htmlFor=\"bandwitch\">Bandwitch: </label>\n                        <Field type=\"bandwitch\" name=\"bandwitch\" />\n                        <ErrorMessage name=\"bandwitch\" component=\"div\" />\n                    </div>\n                    <div id={\"frm\"}>\n                        <label htmlFor=\"intervalBetweenRequests\">Interval between requests: </label>\n                        <Field type=\"intervalBetweenRequests\" name=\"intervalBetweenRequests\" />\n                        <ErrorMessage name=\"intervalBetweenRequests\" component=\"div\" />\n                    </div>\n\n                    <button type=\"submit\" disabled={isSubmitting}>\n                        Submit\n                    </button>\n                </Form>\n            )}\n        </Formik>\n    </div>\n);\n\nexport default RunNew;"]},"metadata":{},"sourceType":"module"}